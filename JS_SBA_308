// The provided course information.
const CourseInfo = {
  id: 451,
  name: "Introduction to JavaScript"
};

// The provided assignment group.
const AssignmentGroup = {
  id: 12345,
  name: "Fundamentals of JavaScript",
  course_id: 451,
  group_weight: 25,
  assignments: [
    {
      id: 1,
      name: "Declare a Variable",
      due_at: "2023-01-25",
      points_possible: 50
    },
    {
      id: 2,
      name: "Write a Function",
      due_at: "2023-02-27",
      points_possible: 150
    },
    {
      id: 3,
      name: "Code the World",
      due_at: "3156-11-15",
      points_possible: 500
    }
  ]
};

// The provided learner submission data.
const LearnerSubmissions = [
  {
    learner_id: 125,
    assignment_id: 1,
    submission: {
      submitted_at: "2023-01-25",
      score: 47
    }
  },
  {
    learner_id: 125,
    assignment_id: 2,
    submission: {
      submitted_at: "2023-02-12",
      score: 150
    }
  },
  {
    learner_id: 125,
    assignment_id: 3,
    submission: {
      submitted_at: "2023-01-25",
      score: 400
    }
  },
  {
    learner_id: 132,
    assignment_id: 1,
    submission: {
      submitted_at: "2023-01-24",
      score: 39
    }
  },
  {
    learner_id: 132,
    assignment_id: 2,
    submission: {
      submitted_at: "2023-03-07",
      score: 140
    }
  }
];

function validateData(CourseInfo, AssignmentGroup) {
  

  if (AssignmentGroup.course_id !== CourseInfo.id) {
    throw new Error('AssignmentGroup does not belong to the specified CourseInfo')
  }


  AssignmentGroup.assignments.forEach(asmt => {
    if (typeof asmt.points_possible !== 'number' || asmt.points_possible <= 0) {
      throw new Error(`Invalid points_possible value for assignment`)
    }
  })
}

function getLearnerData(CourseInfo, AssignmentGroup, LearnerSubmissions) {

  validateData(CourseInfo, AssignmentGroup)

  const obj1 = {}
  LearnerSubmissions.forEach(s1 => {if (!obj1[s1.learner_id]) {
      obj1[s1.learner_id] = [] }
    obj1[s1.learner_id].push(s1)
  })

    const check_Sub = obj1[132]
    const a_Grp = AssignmentGroup.assignments

    const avg = calc_Avg(check_Sub, a_Grp)
   

    
  const Final_data = []

  Final_data.push({id: 132, avg: avg})

  return Final_data



  function calc_Avg(sub2, asmt2) {
   
    let totalScore = 0
    let totalPossiblePoints = 0
    const allScores = {}

    sub2.forEach(s2 => {
      const a2 = asmt2.find(a => a.id === s2.assignment_id)
        let score = s2.submission.score
        const possible_points = a2.points_possible

        const dueDate = new Date(a2.due_at)
        const submittedDate = new Date(s2.submission.submitted_at)
        if (submittedDate > dueDate) {
          score *= 0.9
        }
      
      totalScore += score
      totalPossiblePoints += possible_points
      allScores[a2.id] = score / possible_points
   
    })
   const avgScore =  totalScore/totalPossiblePoints
    return  {avgScore, ...allScores}
  }

  
}


try {
  const result = getLearnerData(CourseInfo, AssignmentGroup, LearnerSubmissions)
  console.log(result)
} catch (error) {
  console.error("Error:", error.message)
}

